name: Runnable (stable)

on:
  push:
    branches:
      - main
    paths:
      - 'lib/**'
      - 'test/**'
      - 'android/**'
      - 'ios/**'
      - 'example/lib/**'
      - 'example/test/**'
      - 'example/android/**'
      - 'example/ios/**'
      - 'example/macos/**'
      - 'pubspec.yaml'
      - 'example/pubspec.yaml'
      - 'analysis_options.yaml'
      - 'example/analysis_options.yaml'
      - 'copy_on_publish.sh'
      - 'CHANGELOG.md'
  pull_request:
    branches:
      - main
    paths:
      - 'lib/**'
      - 'test/**'
      - 'android/**'
      - 'ios/**'
      - 'example/lib/**'
      - 'example/test/**'
      - 'example/android/**'
      - 'example/ios/**'
      - 'example/macos/**'
      - 'pubspec.yaml'
      - 'example/pubspec.yaml'
      - 'analysis_options.yaml'
      - 'example/analysis_options.yaml'
      - 'copy_on_publish.sh'
      - 'CHANGELOG.md'
jobs:
  analyze:
    name: Analyze on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Log Dart/Flutter versions
        run: |
          dart --version
          flutter --version
      - name: Prepare dependencies
        run: flutter pub get
      - name: Analyse the repo
        run: flutter analyze lib example/lib
      - name: Run tests
        run: flutter test
      - name: Generate docs
        run: |
          dart pub global activate dartdoc
          dart pub global run dartdoc .

  publishable:
    if: github.repository == 'fluttercandies/flutter_photo_manager'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Prepare dependencies
        run: flutter pub get
      - name: Copy before dry run
        run: ./copy_on_publish.sh
      - name: Publish dry run
        uses: k-paxian/dart-package-publisher@master
        with:
          credentialJson: 'MockCredentialJson'
          accessToken: 'MockAccessToken'
          refreshToken: 'MockRefreshToken'
          flutter: true
          dryRunOnly: true

  test_android:
    needs: analyze
    name: Test Android build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - run: dart --version
      - run: flutter --version
      - run: flutter pub get
      - run: cd example; flutter build apk --debug

  test_darwin:
    needs: analyze
    name: Test Darwin build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
          cache: true
      - run: dart --version
      - run: flutter --version
      - run: flutter pub get
      - run: cd example; flutter build ios --no-codesign
      - run: cd example; flutter build macos --debug
